<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns2="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns1="www.tibco.com/plugin/Timer" xmlns:ns="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns4="http://www.tibco.com/CommonLE/Client/Schema/ClientInterface.xsd" xmlns:ns3="http://www.tibco.com/pe/EngineTypes" xmlns:Zimmer="java://CustomFunctions" xmlns:ns0="http://www.tibco.com/namespaces/tnt/plugins/file/v2" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns5="http://www.tibco.com/namespaces/tnt/plugins/jms">
    <pd:name>Services/SFDC_SF/Processes/WriteIndirectEmpDataToFile.process</pd:name>
    <pd:startName>ReceiveIndirectEmpfromSFDC</pd:startName>
    <pd:startX>0</pd:startX>
    <pd:startY>0</pd:startY>
    <pd:returnBindings>
        <root/>
    </pd:returnBindings>
    <pd:starter name="ReceiveIndirectEmpfromSFDC">
        <pd:type>com.tibco.plugin.jms.JMSQueueEventSource</pd:type>
        <pd:resourceType>ae.activities.JMSQueueEventSource</pd:resourceType>
        <pd:x>68</pd:x>
        <pd:y>54</pd:y>
        <config>
            <PermittedMessageType>XML Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>23</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>%%ApplicationDetails/SFDC_SF_USER_SEND/Queue/WriteNoPerNRFileRequestQueue%%</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/EnterpriseLibrary/SharedResources/Connections/JMS/TIBCO_JMS_Connection.sharedjmscon</ConnectionReference>
            <OutDataxsdString>
                <xsd:element name="Users">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Records" minOccurs="0" maxOccurs="unbounded">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="ID" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="FirstName" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="MiddleName" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="LastName" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="Title" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="Email" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="Inactive__c" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="MobilePhone" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="Phone" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="Territory_Number__c" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="Role_Classification__c" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="Sales_Assoc_ID__c" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="Sales_Specialty__c" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="ReportsToId" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="SAP__c" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="Class_Description__c" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="AccountId" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="AccountName" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="Record_Edit_Status__c" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="Employee_Non_Employee__c" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="Lms_required__c" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="RecordTypeId" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="ReportsToEmail" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="Hire_Date__c" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="Fax" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="MAILINGSTREET" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="MAILINGCITY" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="MAILINGSTATE" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="MAILINGPOSTALCODE" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="MAILINGCOUNTRY" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="CreatedDate" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="LastModifiedDate" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="ReportToSapC" type="xsd:string" minOccurs="0"/>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                            <xsd:element name="Lot" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Transactionid" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </OutDataxsdString>
        </config>
        <pd:inputBindings/>
    </pd:starter>
    <pd:endName>End</pd:endName>
    <pd:endX>456</pd:endX>
    <pd:endY>53</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1479993619638</pd:targetNamespace>
    <pd:activity name="CatchUnknownException">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>707</pd:x>
        <pd:y>54</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Confirm">
        <pd:type>com.tibco.pe.core.ConfirmActivity</pd:type>
        <pd:resourceType>activity.confirm</pd:resourceType>
        <pd:x>277</pd:x>
        <pd:y>47</pd:y>
        <config>
            <ConfirmEvent>ReceiveIndirectEmpfromSFDC</ConfirmEvent>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Confirm-1">
        <pd:type>com.tibco.pe.core.ConfirmActivity</pd:type>
        <pd:resourceType>activity.confirm</pd:resourceType>
        <pd:x>573</pd:x>
        <pd:y>53</pd:y>
        <config>
            <ConfirmEvent>ReceiveIndirectEmpfromSFDC</ConfirmEvent>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Render Data">
        <pd:type>com.tibco.plugin.parse.RenderActivity</pd:type>
        <pd:resourceType>ae.activities.RenderActivity</pd:resourceType>
        <pd:x>72</pd:x>
        <pd:y>160</pd:y>
        <config>
            <ParseSharedConfig>/SharedResources/Schemas/DataFormat/SFDataFormat.sharedparse</ParseSharedConfig>
        </config>
        <pd:inputBindings>
            <Rows>
                <xsl:for-each select="$ReceiveIndirectEmpfromSFDC/ns5:ActivityOutput/Body/Users/Records">
                    <User>
                        <xsl:choose>
                            <xsl:when test="upper-case(tib:trim(current()/Inactive__c))='TRUE'">
                                <STATUS>
                                    <xsl:value-of select="'inactive'"/>
                                </STATUS>
                            </xsl:when>
                            <xsl:when test="upper-case(tib:trim(current()/Inactive__c))='FALSE'&#xA;and &#xA;upper-case(tib:trim(current()/Lms_required__c))='FALSE'">
                                <STATUS>
                                    <xsl:value-of select="'inactive'"/>
                                </STATUS>
                            </xsl:when>
                            <xsl:otherwise>
                                <STATUS>
                                    <xsl:value-of select="'active'"/>
                                </STATUS>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="tib:trim(current()/ID)!=''">
                                <USERID>
                                    <xsl:value-of select="concat('&quot;',tib:trim(current()/ID), '&quot;')"/>
                                </USERID>
                            </xsl:when>
                            <xsl:otherwise/>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="tib:trim(current()/Email)!=''">
                                <USERNAME>
                                    <xsl:value-of select="concat('&quot;',tib:trim(current()/Email), '&quot;')"/>
                                </USERNAME>
                            </xsl:when>
                            <xsl:otherwise/>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="tib:trim(current()/FirstName)!=''">
                                <FIRSTNAME>
                                    <xsl:value-of select="concat('&quot;',tib:trim(current()/FirstName), '&quot;')"/>
                                </FIRSTNAME>
                            </xsl:when>
                            <xsl:otherwise/>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="tib:trim(current()/LastName)">
                                <LASTNAME>
                                    <xsl:value-of select="concat('&quot;',tib:trim(current()/LastName), '&quot;')"/>
                                </LASTNAME>
                            </xsl:when>
                            <xsl:otherwise/>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists(current()/Email) and tib:trim(current()/Email)!=''">
                                <EMAIL>
                                    <xsl:value-of select="concat('&quot;',tib:trim(current()/Email),'&quot;')"/>
                                </EMAIL>
                            </xsl:when>
                            <xsl:otherwise>
                                <EMAIL>
                                    <xsl:value-of select="'noemail@zimmerbiomet.com'"/>
                                </EMAIL>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists(current()/ReportToSapC) and tib:trim(current()/ReportToSapC)!=''">
                                <MANAGER>
                                    <xsl:value-of select="concat('&quot;',tib:trim(current()/ReportToSapC),'&quot;')"/>
                                </MANAGER>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:choose>
                                    <xsl:when test="exists(current()/ReportsToId) and tib:trim(current()/ReportsToId)!=''">
                                        <MANAGER>
                                            <xsl:value-of select="concat('&quot;',tib:trim(current()/ReportsToId),'&quot;')"/>
                                        </MANAGER>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <MANAGER>
                                            <xsl:value-of select="'NO_MANAGER'"/>
                                        </MANAGER>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:otherwise>
                        </xsl:choose>
                        <HR>
                            <xsl:value-of select="'NO_HR'"/>
                        </HR>
                        <xsl:choose>
                            <xsl:when test="tib:trim(current()/Territory_Number__c)!=''&#xA;and&#xA;tib:trim(current()/AccountName)!=''">
                                <DIVISION>
                                    <xsl:value-of select="concat('&quot;',tib:trim(current()/Territory_Number__c),&quot;_&quot;,tib:trim(current()/AccountName),'&quot;')"/>
                                </DIVISION>
                            </xsl:when>
                            <xsl:when test="tib:trim(current()/Territory_Number__c)!=''&#xA;and&#xA;tib:trim(current()/AccountName)=''">
                                <DIVISION>
                                    <xsl:value-of select="concat('&quot;',tib:trim(current()/Territory_Number__c),&quot;_&quot;,'NA&quot;')"/>
                                </DIVISION>
                            </xsl:when>
                            <xsl:when test="tib:trim(current()/Territory_Number__c)=''&#xA;and&#xA;tib:trim(current()/AccountName)!=''">
                                <DIVISION>
                                    <xsl:value-of select="concat('&quot;NA',&quot;_&quot;,tib:trim(current()/AccountName),'&quot;')"/>
                                </DIVISION>
                            </xsl:when>
                            <xsl:otherwise>
                                <DIVISION>
                                    <xsl:value-of select="'NULL'"/>
                                </DIVISION>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists(current()/Role_Classification__c) and tib:trim(current()/Role_Classification__c)!=''">
                                <xsl:choose>
                                    <xsl:when test="current()/Role_Classification__c='Zimmer Spine'&#xA;or&#xA;current()/Role_Classification__c='Zimmer Biomet Spine'">
                                        <DEPARTMENT>
                                            <xsl:value-of select="'SPINE_SALES'"/>
                                        </DEPARTMENT>
                                    </xsl:when>
                                    <xsl:when test="current()/Role_Classification__c='CMF&amp;T'">
                                        <DEPARTMENT>
                                            <xsl:value-of select="'CMF&amp;T_SALES'"/>
                                        </DEPARTMENT>
                                    </xsl:when>
                                    <xsl:when test="current()/Role_Classification__c='Zimmer Biomet Canada Recon'">
                                        <DEPARTMENT>
                                            <xsl:value-of select="'RECON_SALES'"/>
                                        </DEPARTMENT>
                                    </xsl:when>
                                    <xsl:when test="current()/Role_Classification__c='Zimmer Biomet Canada Spine'">
                                        <DEPARTMENT>
                                            <xsl:value-of select="'SPINE_SALES'"/>
                                        </DEPARTMENT>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <DEPARTMENT>
                                            <xsl:value-of select="'RECON_SALES'"/>
                                        </DEPARTMENT>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                            <xsl:otherwise>
                                <DEPARTMENT>
                                    <xsl:value-of select="'RECON_SALES'"/>
                                </DEPARTMENT>
                            </xsl:otherwise>
                        </xsl:choose>
                        <LOCATION>
                            <xsl:value-of select="'N/A'"/>
                        </LOCATION>
                        <JOBCODE>
                            <xsl:value-of select="'N/A'"/>
                        </JOBCODE>
                        <TIMEZONE>
                            <xsl:value-of select="'EST'"/>
                        </TIMEZONE>
                        <xsl:choose>
                            <xsl:when test="exists(current()/Hire_Date__c) and tib:trim(current()/Hire_Date__c)!=''">
                                <HIREDATE>
                                    <xsl:value-of select="concat('&quot;',tib:trim(current()/Hire_Date__c),'&quot;')"/>
                                </HIREDATE>
                            </xsl:when>
                            <xsl:otherwise>
                                <HIREDATE>
                                    <xsl:value-of select="'12/31/9999'"/>
                                </HIREDATE>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists(current()/ID) and tib:trim(current()/ID)!=''">
                                <EMPID>
                                    <xsl:value-of select="concat('&quot;',tib:trim(current()/ID),'&quot;')"/>
                                </EMPID>
                            </xsl:when>
                            <xsl:otherwise>
                                <EMPID>
                                    <xsl:value-of select="'N/A'"/>
                                </EMPID>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists(current()/Title) and tib:trim(current()/Title)!=''">
                                <TITLE>
                                    <xsl:value-of select="concat('&quot;',tib:trim(current()/Title), '&quot;')"/>
                                </TITLE>
                            </xsl:when>
                            <xsl:otherwise>
                                <TITLE>
                                    <xsl:value-of select="'N/A'"/>
                                </TITLE>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists(current()/MobilePhone) and tib:trim(current()/MobilePhone)!=''">
                                <BIZ_PHONE>
                                    <xsl:value-of select="concat('&quot;',tib:trim(current()/MobilePhone),'&quot;')"/>
                                </BIZ_PHONE>
                            </xsl:when>
                            <xsl:otherwise/>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists(current()/Fax) and tib:trim(current()/Fax)!=''">
                                <FAX>
                                    <xsl:value-of select="concat('&quot;',tib:trim(current()/Fax), '&quot;')"/>
                                </FAX>
                            </xsl:when>
                            <xsl:otherwise/>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists(current()/MAILINGSTREET) and tib:trim(current()/MAILINGSTREET)!=''">
                                <ADDR1>
                                    <xsl:value-of select="concat('&quot;',Zimmer:stringReplace(tib:trim(current()/MAILINGSTREET),&quot;&#xA;&quot;,' '),'&quot;')"/>
                                </ADDR1>
                            </xsl:when>
                            <xsl:otherwise>
                                <ADDR1>
                                    <xsl:value-of select="'N/A'"/>
                                </ADDR1>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists(current()/MAILINGCITY) and tib:trim(current()/MAILINGCITY)!=''">
                                <CITY>
                                    <xsl:value-of select="concat('&quot;',tib:trim(current()/MAILINGCITY),'&quot;')"/>
                                </CITY>
                            </xsl:when>
                            <xsl:otherwise>
                                <CITY>
                                    <xsl:value-of select="'N/A'"/>
                                </CITY>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists(current()/MAILINGSTATE) and tib:trim(current()/MAILINGSTATE)!=''">
                                <STATE>
                                    <xsl:value-of select="concat('&quot;',tib:trim(current()/MAILINGSTATE), '&quot;')"/>
                                </STATE>
                            </xsl:when>
                            <xsl:otherwise>
                                <STATE>
                                    <xsl:value-of select="'N/A'"/>
                                </STATE>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists(current()/MAILINGPOSTALCODE) and tib:trim(current()/MAILINGPOSTALCODE)!=''">
                                <ZIP>
                                    <xsl:value-of select="concat('&quot;',tib:trim(current()/MAILINGPOSTALCODE),'&quot;')"/>
                                </ZIP>
                            </xsl:when>
                            <xsl:otherwise>
                                <ZIP>
                                    <xsl:value-of select="'N/A'"/>
                                </ZIP>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists(current()/MAILINGCOUNTRY) and tib:trim(current()/MAILINGCOUNTRY)!=''">
                                <COUNTRY>
                                    <xsl:value-of select="concat('&quot;',tib:trim(current()/MAILINGCOUNTRY),'&quot;')"/>
                                </COUNTRY>
                            </xsl:when>
                            <xsl:otherwise>
                                <COUNTRY>
                                    <xsl:value-of select="'US'"/>
                                </COUNTRY>
                            </xsl:otherwise>
                        </xsl:choose>
                        <CUSTOM01>
                            <xsl:value-of select="'AMER'"/>
                        </CUSTOM01>
                        <xsl:choose>
                            <xsl:when test="exists(current()/Role_Classification__c) and tib:trim(current()/Role_Classification__c)!=''">
                                <xsl:choose>
                                    <xsl:when test="tib:trim(current()/Role_Classification__c)='Zimmer Spine'&#xA;or&#xA;tib:trim(current()/Role_Classification__c)='Zimmer Biomet Spine'">
                                        <CUSTOM02>
                                            <xsl:value-of select="concat('&quot;',$_globalVariables/ns:GlobalVariables/ApplicationDetails/Mapping/OPCOM_SPINE, '&quot;')"/>
                                        </CUSTOM02>
                                    </xsl:when>
                                    <xsl:when test="tib:trim(current()/Role_Classification__c)='CMF&amp;T'">
                                        <CUSTOM02>
                                            <xsl:value-of select="concat('&quot;',$_globalVariables/ns:GlobalVariables/ApplicationDetails/Mapping/OPCOM_CMFT, '&quot;')"/>
                                        </CUSTOM02>
                                    </xsl:when>
                                    <xsl:when test="tib:trim(current()/Role_Classification__c)='Zimmer Biomet Canada Recon'">
                                        <CUSTOM02>
                                            <xsl:value-of select="concat('&quot;',$_globalVariables/ns:GlobalVariables/ApplicationDetails/Mapping/OPCOM_CANADA_RECON, '&quot;')"/>
                                        </CUSTOM02>
                                    </xsl:when>
                                    <xsl:when test="tib:trim(current()/Role_Classification__c)='Zimmer Biomet Canada Spine'">
                                        <CUSTOM02>
                                            <xsl:value-of select="concat('&quot;',$_globalVariables/ns:GlobalVariables/ApplicationDetails/Mapping/OPCOM_CANADA_SPINE, '&quot;')"/>
                                        </CUSTOM02>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <CUSTOM02>
                                            <xsl:value-of select="concat('&quot;',$_globalVariables/ns:GlobalVariables/ApplicationDetails/Mapping/OPCOM_OTHER,'&quot;')"/>
                                        </CUSTOM02>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                            <xsl:otherwise>
                                <CUSTOM02>
                                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/ApplicationDetails/Mapping/OPCOM_DEFAULT"/>
                                </CUSTOM02>
                            </xsl:otherwise>
                        </xsl:choose>
                        <CUSTOM03>
                            <xsl:value-of select="'NON_EMPLOYEE'"/>
                        </CUSTOM03>
                        <CUSTOM04>
                            <xsl:value-of select="'YES'"/>
                        </CUSTOM04>
                        <xsl:choose>
                            <xsl:when test="upper-case(tib:trim(current()/Inactive__c))='TRUE'">
                                <CUSTOM07>
                                    <xsl:value-of select="'ZB_CATCH_ALL'"/>
                                </CUSTOM07>
                            </xsl:when>
                            <xsl:when test="upper-case(tib:trim(current()/Inactive__c))='FALSE'&#xA;and &#xA;upper-case(tib:trim(current()/Lms_required__c))='FALSE'">
                                <CUSTOM07>
                                    <xsl:value-of select="'ZB_CATCH_ALL'"/>
                                </CUSTOM07>
                            </xsl:when>
                            <xsl:otherwise>
                                <CUSTOM07>
                                    <xsl:value-of select="'ZB_ALL'"/>
                                </CUSTOM07>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists(current()/Role_Classification__c) and tib:trim(current()/Role_Classification__c)!=''">
                                <xsl:choose>
                                    <xsl:when test="current()/Role_Classification__c='Zimmer Spine'&#xA;or&#xA;current()/Role_Classification__c='Zimmer Biomet Spine'">
                                        <CUSTOM08>
                                            <xsl:value-of select="concat('&quot;',$_globalVariables/ns:GlobalVariables/ApplicationDetails/Mapping/OPCOM1_SPINE,'&quot;')"/>
                                        </CUSTOM08>
                                    </xsl:when>
                                    <xsl:when test="tib:trim(current()/Role_Classification__c)='CMF&amp;T'">
                                        <CUSTOM08>
                                            <xsl:value-of select="concat('&quot;',$_globalVariables/ns:GlobalVariables/ApplicationDetails/Mapping/OPCOM1_CMFT,'&quot;')"/>
                                        </CUSTOM08>
                                    </xsl:when>
                                    <xsl:when test="tib:trim(current()/Role_Classification__c)='Zimmer Biomet Canada Recon'">
                                        <CUSTOM08>
                                            <xsl:value-of select="concat('&quot;',$_globalVariables/ns:GlobalVariables/ApplicationDetails/Mapping/OPCOM1_CANADA_RECON,'&quot;')"/>
                                        </CUSTOM08>
                                    </xsl:when>
                                    <xsl:when test="tib:trim(current()/Role_Classification__c)='Zimmer Biomet Canada Spine'">
                                        <CUSTOM08>
                                            <xsl:value-of select="concat('&quot;',$_globalVariables/ns:GlobalVariables/ApplicationDetails/Mapping/OPCOM1_CANADA_SPINE,'&quot;')"/>
                                        </CUSTOM08>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <CUSTOM08>
                                            <xsl:value-of select="concat('&quot;',$_globalVariables/ns:GlobalVariables/ApplicationDetails/Mapping/OPCOM1_OTHER,'&quot;')"/>
                                        </CUSTOM08>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                            <xsl:otherwise>
                                <CUSTOM08>
                                    <xsl:value-of select="concat('&quot;',$_globalVariables/ns:GlobalVariables/ApplicationDetails/Mapping/OPCOM1_DEFAULT, '&quot;')"/>
                                </CUSTOM08>
                            </xsl:otherwise>
                        </xsl:choose>
                        <CUSTOM09>
                            <xsl:value-of select="'Sales'"/>
                        </CUSTOM09>
                        <CUSTOM10>
                            <xsl:value-of select="'SFDC'"/>
                        </CUSTOM10>
                        <xsl:choose>
                            <xsl:when test="exists(current()/Sales_Specialty__c) and tib:trim(current()/Sales_Specialty__c)!=''">
                                <CUSTOM11>
                                    <xsl:value-of select="concat('&quot;',tib:trim(current()/Sales_Specialty__c), '&quot;')"/>
                                </CUSTOM11>
                            </xsl:when>
                            <xsl:otherwise>
                                <CUSTOM11>
                                    <xsl:value-of select="'UNKNOWN'"/>
                                </CUSTOM11>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="tib:trim(current()/Role_Classification__c)!=''">
                                <CUSTOM12>
                                    <xsl:value-of select="concat('&quot;',tib:trim(current()/Role_Classification__c), '&quot;')&#xA;&#xA;{--mapped for HCP--}"/>
                                </CUSTOM12>
                            </xsl:when>
                        </xsl:choose>
                        <CUSTOM15>
                            <xsl:value-of select="'N/A'&#xA;{--mapped for JOB_DESCRIPTION--}"/>
                        </CUSTOM15>
                        <DEFAULT_LOCALE>
                            <xsl:value-of select="'en_US'"/>
                        </DEFAULT_LOCALE>
                        <LOGIN_METHOD>
                            <xsl:value-of select="'PWD'"/>
                        </LOGIN_METHOD>
                    </User>
                </xsl:for-each>
            </Rows>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SendLog">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>453</pd:x>
        <pd:y>166</pd:y>
        <config>
            <processName>/CLE/Interface/SendLog.process</processName>
        </config>
        <pd:inputBindings>
            <ns4:LogRequest>
                <ns4:Header>
                    <ns4:ComponentName>
                        <xsl:value-of select="BW:getCurrentProcessName($_processContext/ns3:ProcessContext/ProcessId)"/>
                    </ns4:ComponentName>
                    <ns4:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns4:Hostname>
                    <ns4:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/ApplicationDetails/SFDC_SF_USER_SEND/TransactionDomain"/>
                    </ns4:TransactionDomain>
                    <ns4:TransactionType>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/ApplicationDetails/SFDC_SF_USER_SEND/TransactionType"/>
                    </ns4:TransactionType>
                    <ns4:TransactionID>
                        <xsl:value-of select="$ReceiveIndirectEmpfromSFDC/ns5:ActivityOutput/Body/Users/Transactionid"/>
                    </ns4:TransactionID>
                    <ns4:CorrelationID>
                        <xsl:value-of select="current-date()"/>
                    </ns4:CorrelationID>
                    <ns4:InterfaceID>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/ApplicationDetails/SFDC_SF_USER_SEND/InterfaceID"/>
                    </ns4:InterfaceID>
                    <xsl:if test="$Write-File/ns2:WriteActivityOutputClass/fileInfo/fileName">
                        <ns4:Filename>
                            <xsl:value-of select="$Write-File/ns2:WriteActivityOutputClass/fileInfo/fileName"/>
                        </ns4:Filename>
                    </xsl:if>
                    <ns4:Message>
                        <xsl:value-of select="concat(&quot;Lot:&quot;,$ReceiveIndirectEmpfromSFDC/ns5:ActivityOutput/Body/Users/Lot, &quot; - &quot;,count($ReceiveIndirectEmpfromSFDC/ns5:ActivityOutput/Body/Users/Records), ' Records written to SFDC File')"/>
                    </ns4:Message>
                    <ns4:Transaction>
                        <xsl:value-of select="tib:render-xml($ReceiveIndirectEmpfromSFDC/ns5:ActivityOutput/Body/Users)"/>
                    </ns4:Transaction>
                </ns4:Header>
                <ns4:Status>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CLE/Status/IN-PROGRESS"/>
                </ns4:Status>
                <ns4:Audit>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/ApplicationDetails/AuditFlag"/>
                </ns4:Audit>
                <ns4:LogLevel>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CLE/Environment/CommonLE/LOGGING_LEVEL_NUM_INFO"/>
                </ns4:LogLevel>
            </ns4:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SendUnknownExceptions">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>574</pd:x>
        <pd:y>168</pd:y>
        <config>
            <processName>/CLE/Interface/SendException.process</processName>
        </config>
        <pd:inputBindings>
            <ns4:ExceptionRequest>
                <ns4:Header>
                    <ns4:ComponentName>
                        <xsl:value-of select="BW:getCurrentProcessName($_processContext/ns3:ProcessContext/ProcessId)"/>
                    </ns4:ComponentName>
                    <ns4:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns4:Hostname>
                    <ns4:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/ApplicationDetails/SFDC_SF_USER_SEND/TransactionDomain"/>
                    </ns4:TransactionDomain>
                    <ns4:TransactionType>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/ApplicationDetails/SFDC_SF_USER_SEND/TransactionType"/>
                    </ns4:TransactionType>
                    <xsl:choose>
                        <xsl:when test="exists($ReceiveIndirectEmpfromSFDC/ns5:ActivityOutput/Body/Users/Transactionid) and tib:trim($ReceiveIndirectEmpfromSFDC/ns5:ActivityOutput/Body/Users/Transactionid)!=''">
                            <xsl:if test="$ReceiveIndirectEmpfromSFDC/ns5:ActivityOutput/Body/Users/Transactionid">
                                <ns4:TransactionID>
                                    <xsl:value-of select="$ReceiveIndirectEmpfromSFDC/ns5:ActivityOutput/Body/Users/Transactionid"/>
                                </ns4:TransactionID>
                            </xsl:if>
                        </xsl:when>
                        <xsl:otherwise>
                            <ns4:TransactionID>
                                <xsl:value-of select="tib:format-dateTime('ddMMyyHHmmss', current-dateTime())"/>
                            </ns4:TransactionID>
                        </xsl:otherwise>
                    </xsl:choose>
                    <ns4:CorrelationID>
                        <xsl:value-of select="current-date()"/>
                    </ns4:CorrelationID>
                    <ns4:InterfaceID>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/ApplicationDetails/SFDC_SF_USER_SEND/InterfaceID"/>
                    </ns4:InterfaceID>
                    <ns4:Message>
                        <xsl:value-of select="concat(&quot;Lot:&quot;,$ReceiveIndirectEmpfromSFDC/ns5:ActivityOutput/Body/Users/Lot, &quot; - &quot;,'Error Writing NoPerNR User Data to file')"/>
                    </ns4:Message>
                    <ns4:Transaction>
                        <xsl:value-of select="concat(&quot;INPUT::&quot;,tib:render-xml($ReceiveIndirectEmpfromSFDC/ns5:ActivityOutput),&quot;ERROR::&quot;,tib:render-xml($CatchUnknownException))"/>
                    </ns4:Transaction>
                </ns4:Header>
                <ns4:ExceptionCode>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/ApplicationDetails/ErrorCodes/Technical/TECHNICAL_777"/>
                </ns4:ExceptionCode>
                <ns4:StackTrace>
                    <xsl:value-of select="concat(&quot;Error Message: &quot;, $_error/ns3:ErrorReport/Msg, &quot;&#xA;&quot;, &quot;  BW MsgCode: &quot;, &#xA;$_error/ns3:ErrorReport/MsgCode, &quot;&#xA;&quot;,&#xA;&quot;Stack Trace: &quot;, $_error/ns3:ErrorReport/StackTrace, &quot;&#xA;&quot;,&#xA;&quot; Process Stack: &quot;, $_error/ns3:ErrorReport/ProcessStack)"/>
                </ns4:StackTrace>
            </ns4:ExceptionRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Write File">
        <pd:type>com.tibco.plugin.file.FileWriteActivity</pd:type>
        <pd:resourceType>ae.activities.FileWriteActivity</pd:resourceType>
        <pd:x>187</pd:x>
        <pd:y>53</pd:y>
        <config>
            <encoding>text</encoding>
            <compressFile>None</compressFile>
            <append>true</append>
            <createMissingDirectories>true</createMissingDirectories>
        </config>
        <pd:inputBindings>
            <ns2:WriteActivityInputTextClass>
                <fileName>
                    <xsl:value-of select="concat($_globalVariables/ns:GlobalVariables/ApplicationDetails/SFDC_SF_USER_SEND/File/FileLocation,&quot;SFDC_NO_PERNR&quot;,$ReceiveIndirectEmpfromSFDC/ns5:ActivityOutput/Body/Users/Transactionid,&quot;.csv&quot;)"/>
                </fileName>
                <textContent>
                    <xsl:value-of select="$Render-Data/Text"/>
                </textContent>
            </ns2:WriteActivityInputTextClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="sendSuccessResponse-1">
        <pd:type>com.tibco.plugin.jms.JMSReplyActivity</pd:type>
        <pd:resourceType>ae.activities.JMSReplyActivity</pd:resourceType>
        <pd:x>187</pd:x>
        <pd:y>164</pd:y>
        <config>
            <PermittedMessageType>XML Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
                <EventSource>ReceiveIndirectEmpfromSFDC</EventSource>
            </ConfigurableHeaders>
            <InDataxsdString>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="lot" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="status" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </InDataxsdString>
        </config>
        <pd:inputBindings>
            <ns5:ActivityInput>
                <Body>
                    <root>
                        <lot>
                            <xsl:value-of select="$ReceiveIndirectEmpfromSFDC/ns5:ActivityOutput/Body/Users/Lot"/>
                        </lot>
                        <status>
                            <xsl:value-of select="'SUCCESS'"/>
                        </status>
                    </root>
                </Body>
            </ns5:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="sendErrorResponse">
        <pd:type>com.tibco.plugin.jms.JMSReplyActivity</pd:type>
        <pd:resourceType>ae.activities.JMSReplyActivity</pd:resourceType>
        <pd:x>720</pd:x>
        <pd:y>162</pd:y>
        <config>
            <PermittedMessageType>XML Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
                <EventSource>ReceiveIndirectEmpfromSFDC</EventSource>
            </ConfigurableHeaders>
            <InDataxsdString>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="lot" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="status" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </InDataxsdString>
        </config>
        <pd:inputBindings>
            <ns5:ActivityInput>
                <Body>
                    <root>
                        <lot>
                            <xsl:value-of select="$ReceiveIndirectEmpfromSFDC/ns5:ActivityOutput/Body/Users/Lot"/>
                        </lot>
                        <status>
                            <xsl:value-of select="'SUCCESS'"/>
                        </status>
                    </root>
                </Body>
            </ns5:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Render Data</pd:from>
        <pd:to>Write File</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Write File</pd:from>
        <pd:to>sendSuccessResponse-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CatchUnknownException</pd:from>
        <pd:to>sendErrorResponse</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SendUnknownExceptions</pd:from>
        <pd:to>Confirm-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Confirm-1</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ReceiveIndirectEmpfromSFDC</pd:from>
        <pd:to>Render Data</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SendLog</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>sendSuccessResponse-1</pd:from>
        <pd:to>Confirm</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>sendErrorResponse</pd:from>
        <pd:to>SendUnknownExceptions</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Confirm</pd:from>
        <pd:to>SendLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:label>
        <pd:name>Label (2)</pd:name>
        <pd:description>Process is triggered from GetIndirectEmployeesSFDC. 
Sync process which writes each record and sends the confirmation to parent process
</pd:description>
        <pd:x>287</pd:x>
        <pd:y>290</pd:y>
        <pd:width>400</pd:width>
        <pd:height>147</pd:height>
        <pd:fontColor>-16777216</pd:fontColor>
        <pd:color>-1</pd:color>
        <pd:type>solid</pd:type>
        <pd:thickness>0</pd:thickness>
        <pd:fade>true</pd:fade>
    </pd:label>
</pd:ProcessDefinition>