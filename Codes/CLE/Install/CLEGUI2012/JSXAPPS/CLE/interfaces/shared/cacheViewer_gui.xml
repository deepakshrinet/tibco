<serialization jsxversion="3.8" xmlns="urn:tibco.com/v3.0">
  <name><![CDATA[Dialog]]></name>
  <icon><![CDATA[images/prototypes/dialog.gif]]></icon>
  <description><![CDATA[Dialog box.  (Set Modal property for a modal dialog).]]></description>
  <onBeforeDeserialize></onBeforeDeserialize>
  <onAfterDeserialize><![CDATA[
  jsx3.$O(refreshCacheButton).extend({
  	refreshCache: function(){
  		var imgsrc = cle.SERVER.resolveURI('images/icons/xmlDoc.gif');
  		var keys = jsx3.$A(refreshCacheButton.getServer().getCache().keys());
  		cacheMatrix.resetXmlCacheData();
  		keys.each(function(key){
  			var o={jsxid:key,jsxtext:key,jsximg:imgsrc,jsxopen:'1'};
  			cacheMatrix.insertRecord(o,'jsxroot',false);
  		});
  		cacheMatrix.repaintData();
  	}
  });
  //TODO: subscribe to cache changes and update cacheMatrix.
  jsx3.$O(cacheMatrix).extend({
  	showDocument: function(strId){
  		//var doc = cacheMatrix.getServer().getCache().getDocument(strId);
  		//if (doc !=null){
  			blockX.setXMLId(strId);
  			blockX.repaint();
  		//}
  	}
  });
  ]]></onAfterDeserialize>
  <object type="jsx3.gui.Dialog">
    <variants jsxwidth="701" jsxheight="656"></variants>
    <strings jsxname="cacheViewerDialog"></strings>
    <dynamics jsxbgcolor="@Solid Medium"></dynamics>
    <object type="jsx3.gui.WindowBar">
      <variants></variants>
      <strings jsxname="windowBar" jsxtext="Cache Viewer"></strings>
      <object type="jsx3.gui.ToolbarButton">
        <variants></variants>
        <strings jsxname="btnMinimize"></strings>
        <dynamics jsximage="@Min Icon" jsxtip="jsx3.gui.Dialog.min"></dynamics>
        <events jsxexecute="this.getAncestorOfType(jsx3.gui.Dialog).doToggleState();"></events>
      </object>
      <object type="jsx3.gui.ToolbarButton">
        <variants></variants>
        <strings jsxname="btnMaximize"></strings>
        <dynamics jsximage="@Max Icon" jsxtip="jsx3.gui.Dialog.max"></dynamics>
        <events jsxexecute="this.getAncestorOfType(jsx3.gui.Dialog).doMaximize(this);"></events>
      </object>
      <object type="jsx3.gui.ToolbarButton">
        <variants></variants>
        <strings jsxname="btnClose"></strings>
        <dynamics jsximage="@Close Icon" jsxtip="jsx3.gui.Dialog.close"></dynamics>
        <events jsxexecute="this.getAncestorOfType(jsx3.gui.Dialog).doClose();"></events>
      </object>
    </object>
    <object type="jsx3.gui.Block">
      <variants jsxoverflow="1" jsxloadtype="1"></variants>
      <strings jsxname="block" jsxwidth="100%" jsxheight="100%" jsxrelativeposition="1"></strings>
      <object type="jsx3.gui.Splitter">
        <variants jsxleft="0" jsxtop="0"></variants>
        <strings jsxname="splitterV" jsxsubcontainer1pct="34.48773448773449%"></strings>
        <object type="jsx3.gui.Block">
          <variants jsxoverflow="1"></variants>
          <strings jsxname="paneLeft" jsxwidth="100%" jsxheight="100%"></strings>
          <dynamics jsxborder="@Inset" jsxbgcolor="@Solid Light"></dynamics>
          <object type="jsx3.gui.LayoutGrid">
            <variants jsxrelativeposition="0" jsxleft="0" jsxtop="0" jsxoverflow="2"></variants>
            <strings jsxname="layoutRows" jsxrows="28,*" jsxwidth="100%" jsxheight="100%"></strings>
            <dynamics jsxbgcolor="@Solid Light"></dynamics>
            <object type="jsx3.gui.Block">
              <variants jsxoverflow="2"></variants>
              <strings jsxname="pane1" jsxwidth="100%" jsxheight="100%"></strings>
              <dynamics jsxborder="@Outset"></dynamics>
              <object type="jsx3.gui.WindowBar">
                <variants jsxbartype="1"></variants>
                <strings jsxname="toolBar"></strings>
                <object type="jsx3.gui.ToolbarButton">
                  <variants></variants>
                  <strings jsxname="refreshCacheButton" jsximage="images/icons/refreshDoc.gif" jsxtext="Refresh"></strings>
                  <events jsxexecute="this.refreshCache();"></events>
                </object>
              </object>
            </object>
            <object type="jsx3.gui.Block">
              <variants jsxoverflow="2"></variants>
              <strings jsxname="pane2" jsxwidth="100%" jsxheight="100%"></strings>
              <dynamics jsxborder="@Outset"></dynamics>
              <object type="jsx3.gui.Matrix">
                <variants jsxheaderheight="0" jsxjsxxmlasync="1" jsxsuppresshscroll="0" jsxsuppressvscroll="0"></variants>
                <strings jsxname="cacheMatrix" jsxrenderingmodel="hierarchical" jsxpagingmodel="4" jsxdrag="1" jsxdrop="1" jsxselectionmodel="2"></strings>
                <dynamics jsxbgcolor="@Solid Light"></dynamics>
                <events jsxtoggle="jsx3.log('EVENT: (jsxtoggle). ' + strRECORDID + '. Open: ' + bOPEN);" jsxselect="this.showDocument(strRECORDID);"></events>
                <object type="jsx3.gui.Matrix.Column">
                  <variants jsxwidth="600"></variants>
                  <strings jsxname="mc1" jsxcellpadding="2" jsxpath="jsxtext"></strings>
                  <dynamics jsxborder="@Outset" jsxbg="@Bevel TopDown" jsxbgcolor="@Solid Disabled"></dynamics>
                </object>
              </object>
            </object>
          </object>
        </object>
        <object type="jsx3.gui.Block">
          <variants jsxoverflow="1"></variants>
          <strings jsxname="paneRight" jsxwidth="100%" jsxheight="100%"></strings>
          <dynamics jsxborder="@Inset" jsxbgcolor="@Solid Light"></dynamics>
          <object type="jsx3.gui.BlockX">
            <variants jsxrelativeposition="0" jsxleft="10" jsxtop="10" jsxshare="1" jsxxmlasync="1" jsxxslasync="1"></variants>
            <strings jsxwidth="100%" jsxheight="100%" jsxname="blockX"></strings>
            <dynamics jsxbgcolor="@Solid Light" jsxpadding="@8Pixel"></dynamics>
          </object>
        </object>
      </object>
    </object>
  </object>
</serialization>